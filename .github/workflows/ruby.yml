name: Github Testing
on: [push]

permissions:
  contents: read
  id-token: write

jobs:
  bundle_audit:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true
      - name: config bundler
        run: |
          bundle config set without 'development staging production'
          bundle config set deployment 'true'
          bundle env
          head -n1 $(which bundle)
      - name: Bundle Audit Check
        run: bundle exec bundle-audit check --update

  brakeman:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true
      - name: config bundler
        run: |
          bundle config set without 'development staging production'
          bundle config set deployment 'true'
          bundle env
          head -n1 $(which bundle)
      - name: Run Brakeman
        run: bundle exec brakeman --quiet --skip-libs --exit-on-warn --ignore-config=.brakeman-ignore

  test:
    services:
      postgres:
        image: postgres:17
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USERNAME: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        ruby: ['3.2.2']
    runs-on: ${{ matrix.os }}
    env:
      PG_DATABASE: postgres
      PG_HOST: localhost
      PG_USER: postgres
      PG_PASSWORD: password
      PG_PORT: 5432
      RAILS_ENV: test
      COVERAGE: true
      DISABLE_SPRING: 1

    steps:
      - uses: actions/checkout@v5

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: config bundler
        run: |
          bundle config set without 'development staging production'
          bundle config set deployment 'true'
          bundle env
          head -n1 $(which bundle)

      - name: Prepare configs
        run: |
          cp config/application.yml.sample config/application.yml || true
          cp config/database_ci.yml config/database.yml

      - name: Prepare database
        run: |
          bundle exec rake db:create
          bundle exec rake db:schema:load

      - name: Run RSpec with coverage
        run: bundle exec rspec spec

      - uses: qltysh/qlty-action/coverage@v2
        with:
          oidc: true
          files: coverage/.resultset.json

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
